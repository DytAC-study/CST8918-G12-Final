name: Main Pipeline

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'environments/**'
      - '.github/workflows/**'
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  # -----------------------
  # Stage 1: PR checks
  # -----------------------
  static-analysis:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: terraform-linters/setup-tflint@v4
      - run: tflint --recursive

  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: static-analysis
    strategy:
      max-parallel: 1
      matrix:
        environment: [dev, test, prod]
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - run: terraform init
        working-directory: environments/${{ matrix.environment }}
      - run: terraform plan -out=tfplan
        working-directory: environments/${{ matrix.environment }}

  # -----------------------
  # Stage 2: CD pipeline
  # -----------------------
  build-app:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }}

  terraform-apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-app
    strategy:
      max-parallel: 1
      matrix:
        environment: [dev, test, prod]
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - run: terraform init
        working-directory: environments/${{ matrix.environment }}
      - run: terraform apply -auto-approve
        working-directory: environments/${{ matrix.environment }}

  deploy-app:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - uses: actions/checkout@v4
      - run: |
          az aks get-credentials --resource-group <your-rg> --name <your-aks-cluster>
          kubectl set image deployment/weather-app \
            weather-app=${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} \
            -n weather-app
