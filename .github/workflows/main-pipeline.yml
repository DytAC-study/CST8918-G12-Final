name: Main Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.44.1

      - name: Run TFLint
        run: |
          tflint --init
          tflint --recursive

  build-and-push:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_NAME }}.azurecr.io/weather-app:${{ github.sha }}

  terraform-plan:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # ✅ 顺序执行 dev → test → prod
      - name: Terraform Init (dev)
        run: terraform init
        working-directory: environments/dev
      - name: Terraform Plan (dev)
        run: terraform plan -out=tfplan
        working-directory: environments/dev

      - name: Terraform Init (test)
        run: terraform init
        working-directory: environments/test
      - name: Terraform Plan (test)
        run: terraform plan -out=tfplan
        working-directory: environments/test

      - name: Terraform Init (prod)
        run: terraform init
        working-directory: environments/prod
      - name: Terraform Plan (prod)
        run: terraform plan -out=tfplan
        working-directory: environments/prod

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # ✅ 顺序 apply
      - name: Terraform Apply (dev)
        run: terraform apply -auto-approve
        working-directory: environments/dev

      - name: Terraform Apply (test)
        run: terraform apply -auto-approve
        working-directory: environments/test

      - name: Terraform Apply (prod)
        run: terraform apply -auto-approve
        working-directory: environments/prod

  deploy-app:
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RG }} --name ${{ secrets.AKS_NAME }} --overwrite-existing

      - name: Set Image
        run: |
          kubectl set image deployment/weather-app weather-app=${{ secrets.ACR_NAME }}.azurecr.io/weather-app:${{ github.sha }} -n weather-app
