name: Main Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  # ---------------------
  # Static Analysis
  # ---------------------
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.44.1

      - name: Run TFLint
        run: |
          tflint --init
          tflint --recursive

  # ---------------------
  # Build & Push Docker Image
  # ---------------------
  build-push:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR name
        id: get-acr
        run: |
          ACR_NAME=$(az acr list --query "[0].name" -o tsv)
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          az acr build --registry ${{ steps.get-acr.outputs.acr_name }} \
                       --image weather-app:$IMAGE_TAG \
                       ./modules/weather-app

  # ---------------------
  # Terraform Plan & Apply (dev -> test -> prod)
  # ---------------------
  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-push
    strategy:
      max-parallel: 1   # 顺序执行，避免冲突
      matrix:
        environment: [dev, test, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: environments/${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: environments/${{ matrix.environment }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: environments/${{ matrix.environment }}
